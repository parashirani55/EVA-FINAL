{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVA-projects\\\\src\\\\pages\\\\ConversationTester.jsx\",\n  _s = $RefreshSig$();\n// src/pages/ConversationTester.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ConversationTranscript from \"../components/ConversationTranscript\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\nexport default function ConversationTester() {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [script, setScript] = useState(\"Hello, this is Eva. How are you?\");\n  const [customer, setCustomer] = useState(\"\");\n  const [call, setCall] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Poll transcript if we have an active call\n  useEffect(() => {\n    if (!(call !== null && call !== void 0 && call.sid)) return;\n    const interval = setInterval(async () => {\n      try {\n        const res = await axios.get(`${API_BASE}/calls/${call.sid}`);\n        setCall(prev => ({\n          ...prev,\n          transcript: res.data.transcript || []\n        }));\n      } catch (err) {\n        console.error(\"Transcript poll error:\", err);\n      }\n    }, 4000); // poll every 4s\n\n    return () => clearInterval(interval);\n  }, [call === null || call === void 0 ? void 0 : call.sid]);\n  async function startCall(e) {\n    e.preventDefault();\n    setLoading(true);\n    setCall(null);\n    setError(\"\");\n    try {\n      const res = await axios.post(`${API_BASE}/conversation/start`, {\n        phone,\n        script,\n        customer,\n        campaign: null\n      });\n      setCall({\n        sid: res.data.sid,\n        transcript: []\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"\\uD83D\\uDCDE Test Conversational Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: startCall,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-1\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          placeholder: \"+1234567890\",\n          required: true,\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-1\",\n          children: \"Customer Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customer,\n          onChange: e => setCustomer(e.target.value),\n          placeholder: \"John Doe\",\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium mb-1\",\n          children: \"Script\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: script,\n          onChange: e => setScript(e.target.value),\n          rows: 3,\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        children: loading ? \"Calling...\" : \"Start Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-3\",\n      children: [\"\\u26A0\\uFE0F \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), call && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Transcript (Live)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ConversationTranscript, {\n        transcript: call.transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-sm mt-2\",\n        children: [\"Call SID: \", call.sid, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this), \"(Auto-refreshing transcript every 4s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ConversationTester, \"VIAYCz9fPpyp4CFg4Qh6q3NNcUQ=\");\n_c = ConversationTester;\nvar _c;\n$RefreshReg$(_c, \"ConversationTester\");","map":{"version":3,"names":["React","useState","useEffect","axios","ConversationTranscript","jsxDEV","_jsxDEV","API_BASE","ConversationTester","_s","phone","setPhone","script","setScript","customer","setCustomer","call","setCall","loading","setLoading","error","setError","sid","interval","setInterval","res","get","prev","transcript","data","err","console","clearInterval","startCall","e","preventDefault","post","campaign","_err$response","_err$response$data","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","rows","disabled","_c","$RefreshReg$"],"sources":["D:/EVA-projects/src/pages/ConversationTester.jsx"],"sourcesContent":["// src/pages/ConversationTester.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ConversationTranscript from \"../components/ConversationTranscript\";\r\n\r\nconst API_BASE =  \"http://localhost:5000\";\r\n\r\nexport default function ConversationTester() {\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [script, setScript] = useState(\"Hello, this is Eva. How are you?\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [call, setCall] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Poll transcript if we have an active call\r\n  useEffect(() => {\r\n    if (!call?.sid) return;\r\n\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const res = await axios.get(`${API_BASE}/calls/${call.sid}`);\r\n        setCall((prev) => ({ ...prev, transcript: res.data.transcript || [] }));\r\n      } catch (err) {\r\n        console.error(\"Transcript poll error:\", err);\r\n      }\r\n    }, 4000); // poll every 4s\r\n\r\n    return () => clearInterval(interval);\r\n  }, [call?.sid]);\r\n\r\n  async function startCall(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setCall(null);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const res = await axios.post(`${API_BASE}/conversation/start`, {\r\n        phone,\r\n        script,\r\n        customer,\r\n        campaign: null,\r\n      });\r\n      setCall({ sid: res.data.sid, transcript: [] });\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(err.response?.data?.error || err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-xl mx-auto\">\r\n      <h2 className=\"text-xl font-bold mb-4\">📞 Test Conversational Call</h2>\r\n\r\n      <form onSubmit={startCall} className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block font-medium mb-1\">Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            placeholder=\"+1234567890\"\r\n            required\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block font-medium mb-1\">Customer Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={customer}\r\n            onChange={(e) => setCustomer(e.target.value)}\r\n            placeholder=\"John Doe\"\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block font-medium mb-1\">Script</label>\r\n          <textarea\r\n            value={script}\r\n            onChange={(e) => setScript(e.target.value)}\r\n            rows={3}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n        >\r\n          {loading ? \"Calling...\" : \"Start Call\"}\r\n        </button>\r\n      </form>\r\n\r\n      {error && <p className=\"text-red-500 mt-3\">⚠️ {error}</p>}\r\n\r\n      {call && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"font-semibold mb-2\">Transcript (Live)</h3>\r\n          <ConversationTranscript transcript={call.transcript} />\r\n          <p className=\"text-gray-500 text-sm mt-2\">\r\n            Call SID: {call.sid} <br />\r\n            (Auto-refreshing transcript every 4s)\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}