{"ast":null,"code":"import axios from \"axios\";\nconst openaiAxios = axios.create();\nexport const generateScript = async desc => {\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n  if (!apiKey) throw new Error(\"OpenAI API key is missing. Check your .env file.\");\n  try {\n    var _response$data$choice, _response$data$choice2;\n    console.log(\"Sending request to OpenAI API with desc:\", desc);\n    const response = await openaiAxios.post(\"https://api.openai.com/v1/chat/completions\", {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: `\nYou are EVA, an AI calling assistant.\nGenerate only EVA's speaking lines based on the campaign description.\nDo NOT simulate customer responses.\nKeep it natural, concise, and professional.\n`\n      }, {\n        role: \"user\",\n        content: `Campaign description: \"${desc}\"`\n      }],\n      temperature: 0.7,\n      max_tokens: 600\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      }\n    });\n    const script = (_response$data$choice = response.data.choices[0]) === null || _response$data$choice === void 0 ? void 0 : (_response$data$choice2 = _response$data$choice.message) === null || _response$data$choice2 === void 0 ? void 0 : _response$data$choice2.content;\n    if (!script) throw new Error(\"No script content returned from API\");\n    console.log(\"EVA script received:\", script);\n    return script;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response3, _error$response3$data, _error$response3$data2;\n    console.error(\"Script Generation Error:\", {\n      message: error.message,\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n    });\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.error) === null || _error$response3$data2 === void 0 ? void 0 : _error$response3$data2.message) || \"Failed to generate EVA script.\");\n  }\n};","map":{"version":3,"names":["axios","openaiAxios","create","generateScript","desc","apiKey","process","env","REACT_APP_OPENAI_API_KEY","Error","_response$data$choice","_response$data$choice2","console","log","response","post","model","messages","role","content","temperature","max_tokens","headers","Authorization","script","data","choices","message","error","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response3$data2","status"],"sources":["D:/EVA-projects/src/utils/generateScript.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst openaiAxios = axios.create();\r\n\r\nexport const generateScript = async (desc) => {\r\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\r\n  if (!apiKey) throw new Error(\"OpenAI API key is missing. Check your .env file.\");\r\n\r\n  try {\r\n    console.log(\"Sending request to OpenAI API with desc:\", desc);\r\n\r\n    const response = await openaiAxios.post(\r\n      \"https://api.openai.com/v1/chat/completions\",\r\n      {\r\n        model: \"gpt-3.5-turbo\",\r\n        messages: [\r\n          {\r\n            role: \"system\",\r\n            content: `\r\nYou are EVA, an AI calling assistant.\r\nGenerate only EVA's speaking lines based on the campaign description.\r\nDo NOT simulate customer responses.\r\nKeep it natural, concise, and professional.\r\n`\r\n          },\r\n          {\r\n            role: \"user\",\r\n            content: `Campaign description: \"${desc}\"`\r\n          }\r\n        ],\r\n        temperature: 0.7,\r\n        max_tokens: 600,\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    const script = response.data.choices[0]?.message?.content;\r\n    if (!script) throw new Error(\"No script content returned from API\");\r\n\r\n    console.log(\"EVA script received:\", script);\r\n    return script;\r\n  } catch (error) {\r\n    console.error(\"Script Generation Error:\", {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n    });\r\n    throw new Error(\r\n      error.response?.data?.error?.message ||\r\n        \"Failed to generate EVA script.\"\r\n    );\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC;AAElC,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;EACnD,IAAI,CAACH,MAAM,EAAE,MAAM,IAAII,KAAK,CAAC,kDAAkD,CAAC;EAEhF,IAAI;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IACFC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAET,IAAI,CAAC;IAE7D,MAAMU,QAAQ,GAAG,MAAMb,WAAW,CAACc,IAAI,CACrC,4CAA4C,EAC5C;MACEC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;MACU,CAAC,EACD;QACED,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE,0BAA0Bf,IAAI;MACzC,CAAC,CACF;MACDgB,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE;IACd,CAAC,EACD;MACEC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUlB,MAAM;MACjC;IACF,CACF,CAAC;IAED,MAAMmB,MAAM,IAAAd,qBAAA,GAAGI,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,cAAAhB,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BiB,OAAO,cAAAhB,sBAAA,uBAAjCA,sBAAA,CAAmCQ,OAAO;IACzD,IAAI,CAACK,MAAM,EAAE,MAAM,IAAIf,KAAK,CAAC,qCAAqC,CAAC;IAEnEG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEW,MAAM,CAAC;IAC3C,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,sBAAA;IACdrB,OAAO,CAACgB,KAAK,CAAC,0BAA0B,EAAE;MACxCD,OAAO,EAAEC,KAAK,CAACD,OAAO;MACtBO,MAAM,GAAAL,eAAA,GAAED,KAAK,CAACd,QAAQ,cAAAe,eAAA,uBAAdA,eAAA,CAAgBK,MAAM;MAC9BT,IAAI,GAAAK,gBAAA,GAAEF,KAAK,CAACd,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBL;IACxB,CAAC,CAAC;IACF,MAAM,IAAIhB,KAAK,CACb,EAAAsB,gBAAA,GAAAH,KAAK,CAACd,QAAQ,cAAAiB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBJ,KAAK,cAAAK,sBAAA,uBAA3BA,sBAAA,CAA6BN,OAAO,KAClC,gCACJ,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}